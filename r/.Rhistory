p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=8)
p
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.8,.8))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=8)
p
theme_set(theme_bw(30))
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.9,.9))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=8)
ggsave(p, "~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",dpi=400,w=10,h=5)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=10,h=5)
theme_set(theme_bw(20))
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.9,.9))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=8)
p
theme_set(theme_bw(20))
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.9,.9))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=6)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=12,h=5)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=11,h=5)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=10,h=7)
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.85,.85))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=6)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=10,h=7)
final_res <- fread("../python/results/final_model_pub_res.tsv")
final_res
final_res_dict  <- fread("../python/results/baselines_on_public_data.tsv")
final_res_dict
b <- fread("../python/results/param_tuning_results.tsv")
setnames(b, c("fold","cutoff","use_filtered","dataset","param","v","tp","fn","fp","tn","prec","recall","f1","auc"))
b <- b[cutoff == .0001]
b_av <- b[,as.list(smean.cl.normal(f1)),
by=c("use_filtered","dataset","param","v")]
b_av <- arrange(b_av, by=-f1)
#not interesting, just without head features. Doesn't really change much but performs slightly worse
# in absolute terms
b_av <- b_av[dataset != "x_wv_ls"]
plot_dat_for_cross_val <- b_av[,list(v=.SD$param[which.max(f1)],
param=.SD$param[which.max(f1)],
f1=max(f1),
sd_f1=.SD$sd_f1[which.max(f1)]),
by=c("dataset","use_filtered")]
b_av
b_av <- b[,list(f1=max(f1),sd_f1=.SD$sd_f1[which.max(f1)])),
by=c("use_filtered","dataset","param","v")]
b_av <- arrange(b_av, by=-f1)
b_av <- b[,list(f1=max(f1),sd_f1=.SD$sd_f1[which.max(f1)]),
by=c("use_filtered","dataset","param","v")]
b
b_av <- b[,list(f1=max(f1),sd_f1=.SD$sd_f1[which.max(f1)]), by=c("use_filtered","dataset","param","v")]
b_av <- b[,max(f1), by=c("use_filtered","dataset","param","v")]
b_av
b_av <- b[,list(f1=mean(f1),sd_f1=sd(f1)), by=c("use_filtered","dataset","param","v")]
b_av <- arrange(b_av, by=-f1)
b)av
b_av
b_av <- b_av[dataset != "x_wv_ls"]
plot_dat_for_cross_val <- b_av[,list(v=.SD$param[which.max(f1)],
param=.SD$param[which.max(f1)],
f1=max(f1),
sd_f1=.SD$sd_f1[which.max(f1)]),
by=c("dataset","use_filtered")]
plot_dat_for_cross_val
b_av
b_av <- b[,list(f1=mean(f1),sd_f1=sd(f1)), by=c("use_filtered","dataset","param","v")]
b_av
b_av <- arrange(b_av, by=-f1)
b_av
plot_dat_for_cross_val <- b_av[,list(v=.SD$v[which.max(f1)],
param=.SD$param[which.max(f1)],
f1=max(f1),
sd_f1=.SD$sd_f1[which.max(f1)]),
by=c("dataset","use_filtered")]
plot_dat_for_cross_val
plot_dat_for_cross_val$dataset <- factor(plot_dat_for_cross_val$dataset,
levels=c("full","x_wv","x","all_wv","wv"),
labels=c("All Features",
"Simple+Dictionary+Word",
"Simple+Dictionary",
"All Word Vectors",
"Only Single Word Vector"))
dictionary_res <- fread("../python/results/baselines_on_ferg_data.tsv",header=F,sep = "\t")
setnames(dictionary_res, c("dict","tp","fn","fp","tn","prec","recall","f1","auc"))
theme_set(theme_bw(20))
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.85,.85))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=6)
p
b_av <- b_av[dataset != "x_wv_ls"]
plot_dat_for_cross_val <- b_av[,list(v=.SD$v[which.max(f1)],
param=.SD$param[which.max(f1)],
f1=max(f1),
sd_f1=.SD$sd_f1[which.max(f1)]),
by=c("dataset","use_filtered")]
plot_dat_for_cross_val$dataset <- factor(plot_dat_for_cross_val$dataset,
levels=c("full","x_wv","x","all_wv","wv"),
labels=c("All Features",
"Simple+Dictionary+Word",
"Simple+Dictionary",
"All Word Vectors",
"Only Single Word Vector"))
dictionary_res <- fread("../python/results/baselines_on_ferg_data.tsv",header=F,sep = "\t")
setnames(dictionary_res, c("dict","tp","fn","fp","tn","prec","recall","f1","auc"))
theme_set(theme_bw(20))
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.85,.85))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=6)
p
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=10,h=7)
final_res <- fread("../python/results/final_model_pub_res.tsv")
final_res_dict  <- fread("../python/results/baselines_on_public_data.tsv")
final_res
final_res_dict  <- fread("../python/results/baselines_on_public_data.tsv")
final_res_dict
.56/75
.56/.75
.19/.75
.2/.75
(.755-.567)/.75
plot_dat_for_cross_val <- b_av[,list(v=.SD$v[which.max(f1)],
param=.SD$param[which.max(f1)],
f1=max(f1),
sd_f1=.SD$sd_f1[which.max(f1)]),
by=c("dataset","use_filtered")]
plot_dat_for_cross_val$dataset <- factor(plot_dat_for_cross_val$dataset,
levels=c("full","x_wv","x","all_wv","wv"),
labels=c("All Features",
"Lexical+Dictionary+Word Vectors",
"Lexical+Dictionary",
"All Word Vectors",
"Word Vector for W Only"))
dictionary_res <- fread("../python/results/baselines_on_ferg_data.tsv",header=F,sep = "\t")
setnames(dictionary_res, c("dict","tp","fn","fp","tn","prec","recall","f1","auc"))
theme_set(theme_bw(20))
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.85,.85))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-Only Combination",
size=6)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=10,h=7)
p + coord_flip(())
p + coord_flip()
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.85,.85))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.62,
label="Best Dictionary-only\nCombination",
size=6)
p <- p + coord_flip()
p
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.5,
label="Best Dictionary-only\nCombination",
size=6)
p <- p + coord_flip()
p
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.85,.85))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1)) + annotate("text",x=1.6,y=.54,
label="Best Dictionary-only\nCombination",
size=6)
p <- p + coord_flip()
p
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.85,.85))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1),size=1.2,color='blue') + annotate("text",x=1.6,y=.54,
label="Best Dictionary-only\nCombination",
size=6,color='blue')
p <- p + coord_flip()
p
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=10,h=7)
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.8,.85))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1),size=1.2,color='blue') + annotate("text",x=1.6,y=.54,
label="Best Dictionary-only\nCombination",
size=6,color='blue')
p <- p + coord_flip()
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=10,h=7)
p <- ggplot(plot_dat_for_cross_val,
aes(dataset,f1,ymin=f1-sd_f1,ymax=f1+sd_f1,color=use_filtered))
p <- p + geom_pointrange(position=position_dodge(width=.5), size=1.5) + ylab("F1") + xlab("Feature Set")
p <- p + theme(axis.text.x =element_text(angle=45,hjust=1), legend.title=element_blank(),legend.position=c(.8,.9))
p <- p + scale_color_discrete(labels=c("Non-filtered model","Filtered Model"))
p <- p + geom_hline(y=max(dictionary_res$f1),size=1.2,color='blue') + annotate("text",x=1.6,y=.54,
label="Best Dictionary-only\nCombination",
size=6,color='blue')
p <- p + coord_flip()
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f1.png",p, dpi=400,w=10,h=7)
full_join()
plot_dat_for_cross_val
d <- fread("../python/results/top_ten.txt")
d
ggplot(d, aes(V1,V2)) + geom_bar(stat='identity') + coord_flip()
d$V1 <- factor(d$V1, levels=arrange(d,V2)$V1)
ggplot(d, aes(V1,V2)) + geom_bar(stat='identity') + coord_flip()
library(scales)
d <- fread("../python/results/top_ten.txt")
d$V1 <- factor(d$V1, levels=arrange(d,V2)$V1)
p1 <- ggplot(d, aes(V1,V2)) + geom_bar(stat='identity') + coord_flip()
p1 <- p1 + xlab("Top Ten Identities") + ylab("% Total Identites Accounted For")
p1 <- p1 + scale_y_continuous(labels=percent)
p1
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f2.png",p, dpi=400,w=4,h=4)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f2.png",p1, dpi=400,w=4,h=4)
theme_set(theme_bw(20))
p1
theme_set(theme_bw(15))
p1
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f2.png",p1, dpi=400,w=4,h=4)
d[d$V1 == 'nigga']$V1 <- '$$$ga'
d <- fread("../python/results/top_ten.txt")
d[d$V1 == 'nigga']$V1 <- '$$$ga'
d$V1 <- factor(d$V1, levels=arrange(d,V2)$V1)
p1 <- ggplot(d, aes(V1,V2)) + geom_bar(stat='identity') + coord_flip()
p1 <- p1 + xlab("Top Ten Identities") + ylab("% Total Identites Accounted For")
p1 <- p1 + scale_y_continuous(labels=percent)
p1
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f2.png",p1, dpi=400,w=4,h=4)
d <- fread("../python/results/pdf_identities.csv")
d
p2 <- ggplot(d, aes(V2,V3)) + geom_point() + scale_x_log10() + scale_y_log10()
p2
d <- d[V2 > 0]
p2 <- ggplot(d, aes(V2,V3)) + geom_point() + scale_x_log10() + scale_y_log10()
p2
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f2.png",p1, dpi=400,w=4,h=3)
theme_set(theme_bw(12))
d <- fread("../python/results/top_ten.txt")
d[d$V1 == 'nigga']$V1 <- '$$$ga'
d$V1 <- factor(d$V1, levels=arrange(d,V2)$V1)
p1 <- ggplot(d, aes(V1,V2)) + geom_bar(stat='identity') + coord_flip()
p1 <- p1 + xlab("Top Ten Identities") + ylab("% Total Identites Accounted For")
p1 <- p1 + scale_y_continuous(labels=percent)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f2.png",p1, dpi=400,w=4,h=3)
p1 <- p1 + xlab("Top Ten Identities") + ylab("% of all identity labels\nthat were this term")
p1 <- p1 + scale_y_continuous(labels=percent)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f2.png",p1, dpi=400,w=4,h=3)
p1 <- ggplot(d, aes(V1,V2)) + geom_bar(stat='identity') + coord_flip()
p1 <- p1 + xlab("Top Ten Identities") + ylab("% of all identity labels\nthat were this term")
p1 <- p1 + scale_y_continuous(labels=percent)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f2.png",p1, dpi=400,w=4,h=3)
sum(d$V2)
d
sum(d$V2[1:3])
100/16.7
d <- fread("../python/results/per_user_identity_counts.csv")
d
ggplot(d, aes(uniq)) + geom_histogram()
theme_set(theme_bw(15))
theme_set(theme_bw(15))
d <- fread("../python/results/per_user_identity_counts.csv")
ggplot(d, aes(uniq)) + geom_histogram()
p2 <- ggplot(d, aes(uniq)) + geom_histogram()
p2 <- p2 + ylab("Number of Users") + xlab("Number of Unique Identities Used")
p2
p2 + geom_hline(x=68,color='red',size=1.2)
p2 + geom_vline(x=68,color='red',size=1.2)
p2 + geom_vline(x=68,color='red',size=1.2) + scale_x_continuous(limits=c(0,50,68,100,300,500,600))
p2 + geom_vline(x=68,color='red',size=1.2) + scale_x_continuous(limits=c(0,50,68,100,300,500,600))
p2 + geom_vline(x=68,color='red',size=1.2) + scale_x_continuous(breaks=c(0,50,68,100,300,500,600))
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f3.png",p2, dpi=400,w=4,h=3)
theme_set(theme_bw(12))
d <- fread("../python/results/per_user_identity_counts.csv")
p2 <- ggplot(d, aes(uniq)) + geom_histogram()
p2 <- p2 + ylab("Number of Users") + xlab("Number of Unique Identities Used")
p2 <- p2 + geom_vline(x=68,color='red',size=1.2)
p2 <- p2 + scale_x_continuous(breaks=c(0,50,68,100,300,500,600))
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f3.png",p2, dpi=400,w=4,h=3)
theme_set(theme_bw(12))
d <- fread("../python/results/per_user_identity_counts.csv")
p2 <- ggplot(d, aes(uniq)) + geom_histogram()
p2 <- p2 + ylab("Number of Users") + xlab("Number of Unique Identities Used")
p2 <- p2 + geom_vline(x=68,color='red',size=1.2)
ggsave("~/Dropbox/Kenny/papers/current/defense/study_1/figs/f3.png",p2, dpi=400,w=4,h=3)
d <- fread("../python/results/lda_results.csv")
d
d <- fread("../python/results/lda_results.csv",header=T)
d
d <- fread("../python/results/lda_results.csv",header=T)
d
d <- fread("../python/results/lda_results.csv",header=T)
d
summary(d$V5)
unique(d$V5)
d <- fread("../python/results/lda_results.csv",header=T)
d
rep(1:20,20)
rep(1:20,40)
rep(1:20,30)
d$n <- rep(1:20,30)
d
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 10]
d <- d[topic_name != ""]
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + coord_flip() + facet_wrap(~topic_name)
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d$n <- rep(1:20,30)
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 10]
d <- d[topic_name != ""]
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d$n <- rep(1:20,30)
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 10]
d <- d[topic_name != ""]
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + coord_flip() + facet_wrap(~topic_name)
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + coord_flip() + facet_wrap(~topic_name,scales="free_x")
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + facet_wrap(~topic_name,scales="free_x")
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d
d['Brown' %in% V5]
unique(d$V5)
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d$n <- rep(1:20,30)
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 10]
d <- d[topic_name != ""]
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + coord_flip() + facet_wrap(~topic_name)
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + facet_wrap(~topic_name,scales="free_x") + theme(axis.text.x=element_text(angle=70,hjust=1))
d <- fread("../python/results/spatial_lda_results.csv",header=T)
d
d
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d$n <- rep(1:20,30)
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 10]
d <- d[topic_name != ""]
theme_set(theme_bw(15))
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + facet_wrap(~topic_name,scales="free_x") + theme(axis.text.x=element_text(angle=70,hjust=1))
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + facet_wrap(~topic_name,scales="free_x") + theme(axis.text.x=element_text(angle=45,hjust=1))
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d$n <- rep(1:20,30)
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 10]
d <- d[topic_name != ""]
d[topic_name =="Brown/Garner"]
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d$n <- rep(1:20,30)
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 10]
d <- d[topic_name != ""]
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + coord_flip() + facet_wrap(~topic_name)
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + facet_wrap(~topic_name,scales="free_x") + theme(axis.text.x=element_text(angle=45,hjust=1))
d2 <- fread("../python/results/spatial_lda_results.csv",header=T)
d2
names(d2)
d2[,24:ncol(d2)]
d2[,24:ncol(d2),with=F]
d3 <- d2[,24:ncol(d2),with=F]
d2 <- d2[,24:ncol(d2),with=F]
d3 <- melt(d2, id.vars="b_percent")
nrow(d3)
ggplot(d3, aes(value,color=variable)) + geom_density()
ggplot(d3, aes(value,color=variable)) + geom_density() + scale_x_log10()
ggplot(d3, aes(value)) + geom_density() + scale_x_log10() + facet_wrap(~variable)
ggplot(d3, aes(value,color=variable)) + geom_density() + scale_x_log10() + geom_vline(x=.001,size=1.5)
ggplot(d3, aes(value,color=variable)) + geom_density() + scale_x_log10() + geom_vline(x=.01,size=1.5)
ggplot(d3, aes(value,color=variable)) + geom_density() + scale_x_log10() + geom_vline(x=.005,size=1.5)
d3$split <- d3$value > .005
d3
table(d3$variable)
d3$top_no <- rep(1:20,each=72991)
d3$top_no <- rep(1:30,each=72991)
unique(d[,c("topic","topic_name"),with=F])
merge(d3,unique(d[,c("topic","topic_name"),with=F]), on="topic")
d3
d3$top_no <- NULL
d3$topic <- rep(1:30,each=72991)
merge(d3,unique(d[,c("topic","topic_name"),with=F]), on="topic")
merge(d3,unique(d[,c("topic","topic_name"),with=F]), by="topic")
d3 <- merge(d3,unique(d[,c("topic","topic_name"),with=F]), by="topic")
ggplot(d3, aes(splot,b_percent)) + stat_summary(fun.data="mean_cl_boot") + facet_wrap(~topic_name)
ggplot(d3, aes(split,b_percent)) + stat_summary(fun.data="mean_cl_boot") + facet_wrap(~topic_name)
d3 <- melt(d2, id.vars="b_percent")
#topic distributions are bimodal
ggplot(d3, aes(value,color=variable)) + geom_density() + scale_x_log10() + geom_vline(x=.005,size=1.5)
d3$split <- d3$value > .005
d3$topic <- rep(0:29,each=72991)
d3 <- merge(d3,unique(d[,c("topic","topic_name"),with=F]), by="topic")
d3
ggplot(d3, aes(split,b_percent)) + stat_summary(fun.data="mean_cl_boot") + facet_wrap(~topic_name)
ggplot(d3, aes(split,b_percent)) + stat_summary(fun.data="mean_cl_boot") + facet_wrap(~topic_name,scales="free_y")
library(Hmisc)
dat <- d3[,as.list(smean.cl.boot(b_percent,conf.int = 99)),by="topic_name"]
dat <- d3[,as.list(smean.cl.boot(b_percent,conf.int = .99)),by="topic_name"]
dat
dat <- d3[,as.list(smean.cl.boot(.SD$b_percent,conf.int = .99)),by="topic_name"]
dat
dat <- d3[,as.list(smean.cl.boot(.SD$b_percent,conf.int = .99)),by=c("topic_name","split")]
dat
ggplot(dat, aes(split,Mean,ymin=Lower,ymax=Upper)) + geom_pointrange() + facet_wrap(~topic_name, scales="free_y")
ggplot(dat, aes(split,Mean,ymin=Lower,ymax=Upper)) + geom_pointrange() + facet_wrap(~topic_name)
d2 <- fread("../python/results/spatial_lda_results.csv",header=T)
d2
d2[,5,with=F]
d2 <- fread("../python/results/spatial_lda_results.csv",header=T)
d2 <- d2[,c(5,c(24:ncol(d2)),with=F]
d2 <- fread("../python/results/spatial_lda_results.csv",header=T)
d2 <- d2[,c(5,c(24:ncol(d2))),with=F]
d3 <- melt(d2, id.vars="total_pop")
d3
d2 <- fread("../python/results/spatial_lda_results.csv",header=T)
d2 <- d2[,c(5,c(24:ncol(d2))),with=F]
d2$log_tot_pop <- log(d2$total_pop)
d3 <- melt(d2, id.vars="log_tot_pop")
d2 <- fread("../python/results/spatial_lda_results.csv",header=T)
d2 <- d2[,c(5,c(25:ncol(d2))),with=F]
d2$log_tot_pop <- log(d2$total_pop)
d2$total_pop <- NULL
d3 <- melt(d2, id.vars="log_tot_pop")
ggplot(d3, aes(value,color=variable)) + geom_density() + scale_x_log10() + geom_vline(x=.005,size=1.5)
d3$split <- d3$value > .01
d3$topic <- rep(0:29,each=72991)
d3 <- merge(d3,unique(d[,c("topic","topic_name"),with=F]), by="topic")
dat <- d3[,as.list(smean.cl.boot(.SD$b_percent,conf.int = .99)),by=c("topic_name","split")]
d3
dat <- d3[,as.list(smean.cl.boot(log_tot_pop,conf.int = .99)),by=c("topic_name","split")]
ggplot(dat, aes(split,Mean,ymin=Lower,ymax=Upper)) + geom_pointrange() + facet_wrap(~topic_name)
d2 <- fread("../python/results/spatial_lda_results.csv",header=T)
d2 <- d2[,24:ncol(d2),with=F]
d3 <- melt(d2, id.vars="b_percent")
#topic distributions are bimodal
#ggplot(d3, aes(value,color=variable)) + geom_density() + scale_x_log10() + geom_vline(x=.005,size=1.5)
d3$split <- d3$value > .01
d3$topic <- rep(0:29,each=72991)
d3 <- merge(d3,unique(d[,c("topic","topic_name"),with=F]), by="topic")
dat <- d3[,as.list(smean.cl.boot(.SD$b_percent,conf.int = .99)),by=c("topic_name","split")]
ggplot(dat, aes(split,Mean,ymin=Lower,ymax=Upper)) + geom_pointrange() + facet_wrap(~topic_name)
dat
dat[,.SD[split == T]$Mean-.SD[split == F]$Mean),by="topic_name"]
dat[,.SD[split == T]$Mean-.SD[split == F]$Mean,by="topic_name"]
arrange(dat[,.SD[split == T]$Mean-.SD[split == F]$Mean,by="topic_name"],V1)
ggplot(dat[topic_name %in% c("College","Race Two")], aes(split,Mean,ymin=Lower,ymax=Upper, color=topic_name)) + geom_pointrange()
ggplot(dat[topic_name %in% c("College","Race Two")], aes(split,Mean,ymin=Lower,ymax=Upper, color=topic_name)) + geom_pointrange() + geom_line()
ggplot(dat[topic_name %in% c("College","Race Two")], aes(split,Mean,ymin=Lower,ymax=Upper, color=topic_name,group=topic_name)) + geom_pointrange() + geom_line()
ggplot(dat[topic_name %in% c("Politics One","Politics Three")], aes(split,Mean,ymin=Lower,ymax=Upper, color=topic_name,group=topic_name)) + geom_pointrange() + geom_line()
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d$n <- rep(1:20,30)
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 10]
d <- d[topic_name != ""]
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + facet_wrap(~topic_name,scales="free_x") + theme(axis.text.x=element_text(angle=45,hjust=1))
d <- fread("../python/results/lda_results_tagged.csv",header=T)
d$n <- rep(1:20,30)
d$V1 <- NULL
setnames(d, c("topic","prob","word","topic_name","ranking"))
d <- d[ranking <= 5]
d <- d[topic_name != ""]
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + facet_wrap(~topic_name,scales="free") + theme(axis.text.x=element_text(angle=45,hjust=1))
d <- d[topic_name != "" & topic_name != "British One" & topic_name != "Politics British"]
ggplot(d, aes(word,prob)) + geom_bar(stat='identity') + facet_wrap(~topic_name,scales="free") + theme(axis.text.x=element_text(angle=45,hjust=1))
ggplot(dat[topic_name %in% c("Brown/Garner","Brown/Garner One")], aes(split,Mean,ymin=Lower,ymax=Upper, color=topic_name,group=topic_name)) + geom_pointrange() + geom_line()
